generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  firstName           String
  lastName            String
  email               String    @unique
  password            String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  roleId              Int
  id                  Int       @id @default(autoincrement())
  createdAt           DateTime  @default(now())
  isActive            Boolean   @default(true)
  updatedAt           DateTime  @updatedAt
  Sale                Sale[]
  role                Role      @relation(fields: [roleId], references: [id])
}

model Role {
  id    Int      @id @default(autoincrement())
  name  RoleType @unique
  users User[]
}

enum RoleType {
  Admin
  Seller
}

model Product {
  sku        String       @unique
  name       String
  price      Decimal      @default(0.00) @db.Decimal(10, 2)
  stock      Int          @default(0)
  id         Int          @id @default(autoincrement())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  SaleDetail SaleDetail[]
}

model Sale {
  id                   Int                @id @default(autoincrement())
  saleCode             String             @unique @db.VarChar(20)
  customerName         String
  identificationId     Int
  identificationNumber String             @db.VarChar(15)
  email                String?
  totalAmount          Decimal            @default(0.00) @db.Decimal(10, 2)
  sellerId             Int
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  status               SaleStatus         @default(Pending)
  identification       IdentificationType @relation(fields: [identificationId], references: [id])
  seller               User               @relation(fields: [sellerId], references: [id])
  SaleDetail           SaleDetail[]
}

enum SaleStatus {
  Pending
  Completed
  Canceled
}

model SaleDetail {
  quantity  Int      @default(1)
  unitPrice Decimal  @default(0.00) @db.Decimal(10, 2)
  subtotal  Decimal  @default(0.00) @db.Decimal(10, 2)
  id        Int      @id @default(autoincrement())
  saleId    Int
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  sale      Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)
}

model IdentificationType {
  id   Int    @id @default(autoincrement())
  type IDType @unique
  Sale Sale[]
}

enum IDType {
  DNI
  RUC
}
